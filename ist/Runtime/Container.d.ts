import { INamedContent } from '../INamedContent';
import { RuntimePath } from './Path';
import { RuntimePathComponent } from './PathComponent';
import { RuntimeObject } from './Object';
import { SearchResult } from './SearchResult';
export declare class RuntimeContainer extends RuntimeObject implements INamedContent {
    private _content;
    name: string;
    get content(): RuntimeObject[];
    set content(value: RuntimeObject[]);
    namedContent: Map<string, INamedContent>;
    get namedOnlyContent(): Map<string, RuntimeObject>;
    set namedOnlyContent(value: Map<string, RuntimeObject>);
    visitsShouldBeCounted: boolean;
    turnIndexShouldBeCounted: boolean;
    countingAtStartOnly: boolean;
    get countFlags(): number;
    set countFlags(value: number);
    get hasValidName(): boolean;
    get pathToFirstLeafContent(): RuntimePath;
    private _pathToFirstLeafContent;
    get internalPathToFirstLeafContent(): RuntimePath;
    readonly AddContent: (content: RuntimeObject | RuntimeObject[]) => void;
    readonly InsertContent: (contentObj: RuntimeObject, index: number) => void;
    readonly TryAddNamedContent: (contentObj: RuntimeObject) => void;
    readonly AddToNamedContentOnly: (namedContentObj: INamedContent) => void;
    readonly AddContentsOfContainer: (otherContainer: RuntimeContainer) => void;
    readonly ContentWithPathComponent: (component: RuntimePathComponent) => RuntimeObject;
    ContentAtPath: (path: RuntimePath, partialPathStart?: number, partialPathLength?: number) => SearchResult;
    readonly BuildStringOfHierarchy: (sb: string, indentation?: number | undefined, pointedObj?: RuntimeObject | undefined) => string;
}
